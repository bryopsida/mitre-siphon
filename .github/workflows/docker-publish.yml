name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      postgres:
        image: "postgres"
        ports:
          - "5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mitre
      kafka:
        image: confluentinc/cp-kafka:7.3.0
        ports:
          - "9093:9092"
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29094,PLAINTEXT_HOST://localhost:9093
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29094,PLAINTEXT_HOST://0.0.0.0:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        
      zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        ports:
          - "9182:2182"
        env:
          ZOOKEEPER_CLIENT_PORT: 2182
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install unzip
        run: apt-get update && apt-get install -y unzip
      - name: Execute Gradle Tasks
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6
          arguments:  versionFile test jacocoReport
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  push:
    name: "Build and push"
    uses: curium-rocks/flows/.github/workflows/oci-build-image.yml@main
    with:
      image_name: mitre-siphon
